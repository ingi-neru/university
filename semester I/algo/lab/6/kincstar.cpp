// Laszlo Kazmer
// 512
// Lab6/10
//Az a패llami kincsta패rba 洧녵 zsa패kban hozza패k a pe패nze패rme패ket.
// A rakta패r fo팲no팯ke ismeri minden zsa패k tartalma패t (az e패rme패k sza패ma패t) e패s a패t szeretne패 rendezni minden zsa패k tartalma패t az e패rme패k ko팯lto팯ztete패se패vel u패gy,
// hogy ve패gu팯l minden zsa패kban azonos sza패mu패 e패rme legyen.
// I패rjunk heurisztikus algoritmust, amely segi패t a fo팲no팯knek, hogy, amennyiben ez lehetse패ges a legkevesebb ko팯lto팯ztete패ssel e패rje el a ce패lja패t!
#include<iostream>
using namespace std;

void be ( long &n, long zsakok[], long maxi, long mini, long &atlag ){
    cin >> n;
    maxi = 0, mini = 1000000000;
    for ( long i = 1; i <= n; i++ ){
        cin >> zsakok[i];
        atlag += zsakok[i];
        if ( zsakok[i] > maxi ) maxi = zsakok[i];
        if ( zsakok[i] < mini ) mini = zsakok[i];
    }
    atlag /= n;
}

void lepesek_szama ( long n, long zsakok[], long atlag,  long &darab ){
    for ( long i = 1; i < n; i++ ){
        bool t = true;
        for ( long j = 1; j <= n && t; i++ ){
            if ( zsakok[i] + zsakok[j] / 2 == atlag && zsakok[i] != atlag ){
            zsakok[i] = atlag;
            zsakok[j] = atlag;
            t = false;
            }
        }
    }
}

int main(){
    long n, zsakok[1001], atlag = 0;
    be(n, zsakok, maxi, mini, atlag);
    lepesek_szama(n, zsakok, atlag, darab);
    cout << darab;
    return 0;
}