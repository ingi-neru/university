//Laszlo Kazmer
//512
//Lab2/9
//Ismert sejte패s, miszerint ha egy adott 洧녵 terme패szetes sza패mot isme패telten ala패vetu팯nk a ko팯vetkezo팲 feldolgoza패snak, 
//eljutunk az 1-es sza패mhoz: ha 洧녵 pa패ros, akkor elosztjuk 2-vel, ha 洧녵 pa패ratlan, megszorozzuk 3-mal e패s az eredme패nyhez hozza패adunk 1-et. 
//Azoknak a le패pe패seknek a sza패ma패t, amelyek egy adott 洧녵-bo팲l az 1-hez vezetnek, karakterisztika패nak nevezzu팯k. 
//I패rjunk programot, amely meghata패rozza azt az 洧녵 sza패mot, amely az [洧논, 洧녽] intervallumhoz tartozik e패s amelynek a karakterisztika패ja a legnagyobb!
#include<iostream>
using namespace std;
int maxkivalaszt2 ( int x, int y, int a[], int hely ){
    hely = y;
    for ( int i = y; i >= x; i-- ){
        if ( a[hely] < a[i] ) hely = i;
    }
    return hely;
}
int collatz ( int x ){
if ( x == 1 ) return 0;
else if ( x % 2 ) return collatz( 3 * x + 1 ) + 1;
else return collatz( x / 2 ) + 1;
}
int main(){
    int x, y, a[1001],hely = 0;
    cin >> x >> y;
    for ( int i = x; i <= y; i++  ){
    a[i] = collatz(i);
    }
    hely = maxkivalaszt2( x, y, a, hely );
    cout << hely << " " << a[hely];
    return 0;
}